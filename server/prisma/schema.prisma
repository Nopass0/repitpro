// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  //prod
  // provider = "postgresql"
  // url      = env("DATABASE_URL")

  //sqlite3 dev
  provider = "sqlite"
  url      = "file:./db.sqlite"
}


//users and auth tokens
model User {
  id         String   @id @default(cuid())
  name       String   @unique
  password   String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  email      String?
  userId     String?
  address    String?
  phone      String?
  source     String?
  expenses   Float?
  comment    String?
  unpaidLessons Int?
  paidLessons Int?
  totalLessonsEarned Int?
  totalLessonsDebt Int?
  isArchived Boolean?
  isDeleted  Boolean?
  filesIds   String?
  linksIds   String?
}


model Token {
  id         String   @id @default(cuid())
  userId     String
  token      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

// # База данных
// 	ученик, карточка
// 1. имя
// 2. контактное лицо
// 3. эл.почта
// 4. адрес
// 5. источник
// 6. расходы по ученику
// 7. комментарий
// 8. уроки(занятия)
// 9. занятий проведено
// 10. сумма проведенных занятий (заработок)
// 11. не оплаченных занятий
// 12. сумма долга
// 13. история занятий и оплат
// 14. пользователь
// 15. список ссылок
// 16. список файлов
// 17. в архиве?
// 18. удалено?

// 	группа учеников, карточка
// 1. ученик (массив)
// 2. занятия
// 3. название
// 4. цель занятий
// 5. начало занятий дата
// 6. конец занятий дата
// 7. расписание
// 8. общая стоимость одного занятия
// 9. всего занятий
// 10. занятий проведено
// 11. сумма проведенных занятий (заработок)
// 12. не оплаченных занятий
// 13. сумма долга
// 14. Общий расход по группе
// 15. список файлов
// 16. список ссылок
// 17. пользователь
// 18. в архиве?
// 19. удалено?

// 	Заказчик, карточка
// 1. Имя
// 2. телефон
// 3. эл.почта
// 4. расходы по заказчику
// 5. комментарий
// 6. пользователь
// 7. работы 
// 8. в архиве?
// 9. удален?

// 	Работы
// 1. работа (массив)
// 2. пользователь

// 	Работа
// 1. Предмет
// 2. Этапы (Массив)
// 3. Название работы
// 4. общая стоимость
// 5. комментарий
// 6. пользователь
// 7. в архиве?
// 8. удалена?

// 	Этап
// 1. название этапа
// 2. стоимость этапа
// 3. пользователь
// 4. тип оплаты (постоплата-предоплата)
// 5. список файлов
// 6. список ссылок

// 	Типы оплаты
// 1. Постоплата
// 2. Предоплата


// 	Список ссылок
// 1. ссылка (массив)
// 2. пользователь

// 	Ссылка
// 1. пользователь
// 2. ссылка

// 	Список файлов
// 1. файл (массив)
// 2. пользователь

// 	Файл
// 1. пользователь
// 2. файл



// 	История занятий и оплат
// 1. занятие-плата (массив)
// 2. пользователь

// 	Занятие-плата
// 1. дата
// 2. тип(занятие-внесение)
// 3. сумма
// 4. название
// 5. пользователь


// 	типы занятий
// 1. занятие на дому
// 2. пользователь
// 3. у ученика
// 4. группа
// 5. онлайн
// 6. группа онлайн

// 	раб.день
// 1. дата
// 2. занятия
// 3. работы
// 4. доход
// 5. пользователь

// 	Занятие
// 1. ученики(-к)
// 2. предмет
// 3. цена
// 4. выполнено?
// 5. удалено?
// 6. тип занятия
// 7. пробный урок? стоимость
// 8. тип занятия
// 9. дата-время начала занятия
// 10. дата-время конца занятия
// 11. расписание
// 12. пользователь

// 	Расписание
// 1. день недели
// 2. дата-время начала\конца
// 3. занятие
// 4. пользователь

// 	Токен
// 1. дата создания
// 2. дата обновления
// 3. токен(строка)
// 4. пользователь

// 	Пользователь-репетитор
// 1. логин\\пароль
// 2. токен
// 3. эл.почта
// 4. покупки
// 5. список файлов
// 6. список ссылок
// 7. ограничение памяти
// 8. занято памяти
// 9. обращение (массив)
// 10. админ-токен(если есть - он админ)

// 	Обращение (обратная связь)
// 1. пользователь
// 2. вопрос
// 3. ответ

// 	Покупки
// 1. покупка (массив)
// 2. пользователь

// 	Покупка
// 1. дата-время
// 2. название
// 3. цена
// 4. пользователь


// 	Занятия
// 1. Заказчик
// 2. пользователь
// 3. Названия группы занятий

model Student {
  id         String   @id @default(cuid())
  name       String   @unique
  contactPerson String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  email      String?
  userId     String?
  address    String?
  phone      String?
  source     String?
  expenses   Float?
  comment    String?
  // lessonsIds    String[]
  unpaidLessons Int?
  paidLessons Int?
  totalLessonsEarned Int?
  totalLessonsDebt Int?
  isArchived Boolean?
  isDeleted  Boolean?
  // filesIds   String[]
  // linksIds   String[]
}

model Lessons {
  id         String   @id @default(cuid())
  name       String
  userId     String
  // lessonsIds    String[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Lesson {
  id         String   @id @default(cuid())
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId  String
  // studentIds  String[]
  link       String?
  // lessonsId String[]
}

model File {
  id         String   @id @default(cuid())
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId  String

  link       String?
}

model Link {
  id         String   @id @default(cuid())
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId  String

  link       String?
}